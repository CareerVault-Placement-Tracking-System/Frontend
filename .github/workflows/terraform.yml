name: Terraform Deploy to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      # OIDC Authentication for Terraform provider & backend
      ARM_USE_OIDC: true
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Terraform variables
      TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_location: "southindia"
      TF_VAR_resource_group_name: "careervault-rg"
      TF_VAR_app_name_prefix: "careervault"

    steps:
      # ðŸ”¹ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # ðŸ”¹ Azure Login using OIDC
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # ðŸ”¹ Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      # ðŸ”¹ Terraform Init
      - name: Terraform Init
        working-directory: ./terraform
        run: |
          terraform init \
            -backend-config="resource_group_name=rg-terraform" \
            -backend-config="storage_account_name=tfstatecareervault01" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=terraform.tfstate"

      # ðŸ”¹ Terraform Validate
      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      # ðŸ”¹ Terraform Plan
      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -input=false

      # ðŸ”¹ Terraform Apply (only on main branch)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: ./terraform
        run: terraform apply -auto-approve -input=false

      # ðŸ”¹ Terraform Output (get web app name)
      - name: Terraform Output
        id: tf_output
        working-directory: ./terraform
        run: echo "webapp_name=$(terraform output -raw webapp_name)" >> $GITHUB_ENV

      # ðŸ”¹ Build React App
      - name: Build React App
        working-directory: ./my-app
        run: |
          npm install
          npm run build

      # ðŸ”¹ Deploy React App to Azure Web App
      - name: Deploy React App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.webapp_name }}
          package: ./frontend/build
